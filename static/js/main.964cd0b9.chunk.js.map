{"version":3,"sources":["utils.js","TicTacToe.js","App.js","index.js"],"names":["useLocalStorageState","key","defaultValue","serialize","JSON","stringify","deserialize","parse","React","valueInLocalStorage","window","localStorage","getItem","state","setState","prevKeyRef","prevKey","current","removeItem","setItem","Board","Array","fill","squares","setSquares","history","setHistory","currStep","setCurrStep","nextValue","filter","Boolean","length","winner","lines","i","a","b","c","calculateWinner","History","renderStepGoto","disableButton","onClick","step","disabled","className","every","map","h","renderSquare","square","updSquares","updHistory","item","index","selectSquare","emptyBoard","App","useState","selTile","setSelTile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.964cd0b9.chunk.js","sourcesContent":["import * as React from 'react'\n\n/**\n *\n * @param {String} key The key to set in localStorage for this value\n * @param {Object} defaultValue The value to use if it is not already in localStorage\n * @param {{serialize: Function, deserialize: Function}} options The serialize and deserialize functions to use (defaults to JSON.stringify and JSON.parse respectively)\n */\n\nfunction useLocalStorageState(\n  key,\n  defaultValue = '',\n  {serialize = JSON.stringify, deserialize = JSON.parse} = {},\n) {\n  const [state, setState] = React.useState(() => {\n    const valueInLocalStorage = window.localStorage.getItem(key)\n    if (valueInLocalStorage) {\n      return deserialize(valueInLocalStorage)\n    }\n    return typeof defaultValue === 'function' ? defaultValue() : defaultValue\n  })\n\n  const prevKeyRef = React.useRef(key)\n\n  React.useEffect(() => {\n    const prevKey = prevKeyRef.current\n    if (prevKey !== key) {\n      window.localStorage.removeItem(prevKey)\n    }\n    prevKeyRef.current = key\n    window.localStorage.setItem(key, serialize(state))\n  }, [key, state, serialize])\n\n  return [state, setState]\n}\n\nexport {useLocalStorageState}\n","\nimport * as React from 'react';\nimport {useLocalStorageState} from './utils';\nimport './styles.css';\n\nexport default function Board() {\n\n  const [squares, setSquares] = useLocalStorageState('localttt', Array(9).fill(null));\n  const initHistory = [squares];\n  \n  const [history, setHistory] = useLocalStorageState('ttthistory', initHistory);\n  const [currStep, setCurrStep] = useLocalStorageState('tttStep', 0);\n\n  const nextValue = calculateNextValue();\n  const winner = calculateWinner();\n\n  function History() {\n\n    function renderStepGoto(i) {\n      const disableButton = i === currStep;\n      return (\n        <li>\n          <button onClick={() => setBoard(i)} disabled={disableButton}>\n            {i === 0 ? 'Go to game start' : `Go to step ${i+1}`} { disableButton ? ' (Current)': ''}\n          </button>\n        </li>\n      );\n    }\n\n    return (\n        <div className=\"status\">\n          {calculateStatus()}\n\n          <ol>\n            {history.map((h, i) => renderStepGoto(i))}\n          </ol>\n        </div>\n    );\n  }\n\n  function setBoard(step) {\n    setSquares(history[step]);\n    setCurrStep(step);\n  }\n\n  function selectSquare(square) {\n    if (squares[square]) return;\n    \n    if (winner) return;\n\n    const updSquares = [...squares];\n    updSquares[square] = nextValue;\n    setSquares(updSquares);\n\n    let updHistory = [...history];\n    if (currStep < (updHistory.length - 1)) {\n      updHistory = updHistory.filter((item, index) => index <= currStep);\n    }\n    updHistory = [...updHistory, updSquares];\n    setHistory(updHistory);\n    setCurrStep(updHistory.length - 1);\n  }\n\n  function restart() {\n    const emptyBoard = Array(9).fill(null);\n    setSquares(emptyBoard);\n    setHistory([emptyBoard]);\n    setCurrStep(0);\n  }\n\n  function renderSquare(i) {\n    return (\n      <button className=\"square\" onClick={() => selectSquare(i)}>\n        {squares[i]}\n      </button>\n    )\n  }\n\n  function calculateNextValue() {\n    return squares.filter(Boolean).length % 2 === 0 ? 'X' : 'O'\n  }\n\n  function calculateStatus() {\n\n    return winner\n      ? `Winner: ${winner}`\n      : squares.every(Boolean)\n        ? `Scratch: Cat's game`\n        : `Next player: ${nextValue}`\n  }\n\n  function calculateWinner() {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i]\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a]\n      }\n    }\n    return null\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <div className=\"board-row\">\n          {renderSquare(0)}\n          {renderSquare(1)}\n          {renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(3)}\n          {renderSquare(4)}\n          {renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {renderSquare(6)}\n          {renderSquare(7)}\n          {renderSquare(8)}\n        </div>\n        <button className=\"restart\" onClick={restart}>\n          Restart Game\n        </button>\n      </div>\n      <div className=\"game-info\">\n        <History />\n      </div>\n    </div>\n  )\n}\n\n\n","import React, { useState } from 'react';\r\nimport Board from './TicTacToe';\r\nimport './styles.css';\r\n\r\nexport default function App() {\r\n  const [selTile, setSelTile] = useState(0);\r\n\r\n  function handleTileClick(newSelTile) {\r\n    setSelTile(newSelTile);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selTile === 0 ? (\r\n      <div className=\"tile\">\r\n        <button className=\"option\" onClick={() => handleTileClick(1)}>Tic Tac Toe</button>\r\n      </div> \r\n      ) : <button className=\"simpleButton\" onClick={() => setSelTile(0)} >Home page</button>\r\n    }\r\n      {selTile === 1 ? (<Board />) : null}\r\n          </>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}